<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- Redis连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 控制一个pool可分配多少个jedis实例 -->
        <property name="maxTotal" value="${redis.pool.maxActive}"/>
        <!-- 连接池中最多空闲maxIdle个连接,这里取值为20,表示即使没有数据库连接时候依然可以保持20空闲连接 -->
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <!-- 最大等待时间,当没有可用连接是,连接池等待连接被归还的最大时间(以毫秒为计数单位),超过时间则抛出异常 -->
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
        <!-- 在获得连接的时候检查有效性 -->
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>

    <!-- 创建redis连接池,并做相关配置 -->
    <bean id="jedisWritePool" class="com.iotch.cache.JedisPoolWriper" depends-on="jedisPoolConfig">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" ref="${redis.hostname}" type="java.lang.String"/>
        <constructor-arg index="2" ref="${redis.port}" type="int"/>
    </bean>

    <!-- 创建redis工具类,封装好redis的连接以进行相关的操作 -->
    <bean id="jedisUtil" class="com.iotch.cache.JedisUtil" scope="singleton">
        <property name="jedisPool">
            <ref bean="jedisWritePool"/>
        </property>
    </bean>

    <!-- redis的key操作 -->
    <bean id="jedisKeys" class="com.iotch.cache.JedisUtil$Keys" scope="singleton">
        <constructor-arg ref="jedisUtil"></constructor-arg>
    </bean>

    <!-- redis的String操作 -->
    <bean id="jedisStrings" class="com.iotch.cache.JedisUtil$String" scope="singleton">

    </bean>
</beans>